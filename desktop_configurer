#!/bin/sh

check_requiremnts(){
	# Check if git is installed
	if ! [ -x "$(command -v git)" ]; then
		echo 'Error: git is not installed.' >&2
		exit 1
	else
		echo "Requirement check was successful! All the necessary dependencies to run this script are already installer!"
	fi
}

read_property(){
	input="$@"
	temp=`cat $config_file | sed 's/\"//g' | grep -w $input | cut -d ":" -f2`
	echo ${temp##*|}
}

wait_for_input(){
	printf 'press [ENTER] to continue'
	read dummy
}

is_user_allowed_to_update(){
	group=$(id -G -n $(whoami) | grep -o "installer")
	if [ "${group}" == "installer" ]; then
		echo true
	else
		echo false
	fi
}

work_dir=.
config_file=${work_dir}/post_install.config

# Check if GIT is istalled
check_requiremnts

# Variable Declaration
is_docker_enabled=$(read_property enable_docker)
timestamp=$(date +%s)

mkdir -p $HOME/.local/scripts
mkdir -p $HOME/.config/openbox/Wallpapers
mkdir -p $HOME/.config/gtk-3.0
mkdir -p $HOME/.themes
mkdir -p $HOME/.icons
mkdir -p $HOME/.config/tint2

echo "Start configuring Openbox Desktop Look & Feel..."
wait_for_input
# .xinitrc
if [ -f "$HOME/.xinitrc" ] 
then
	echo "Backing-up .xinitrc"
	mv $HOME/.xinitrc $HOME/.xinitrc.${timestamp}.bak 
else
	echo "Nothing to backup. File .xinitrc does not exist"
fi
echo "Copying .xinitrc under $HOME"
echo 'exec openbox-session' >> $HOME/.xinitrc

wait_for_input
# tcshrc
if [ -f "$HOME/.tcshrc" ] 
then
	echo "Backing-up .tcshrc"
	mv $HOME/.tcshrc $HOME/.tcshrc.${timestamp}.bak 
else
	echo "Nothing to backup. File .tcshrc does not exist"
fi
echo "Copying .tcshrc under $HOME"
cp ./tcshrc $HOME/.tcshrc

wait_for_input
# Xdefaults
if [ -f "$HOME/.Xdefaults" ] 
then
	echo "Backing-up .Xdefaults"
	mv $HOME/.Xdefaults $HOME/.Xdefaults.${timestamp}.bak 
else
	echo "Nothing to backup. File .Xdefaults does not exist"
fi
echo "Copying .Xdefaults under $HOME"
cp ./Xdefaults $HOME/.Xdefaults

wait_for_input
# Openbox
if [ -f "$HOME/.config/openbox/autostart.sh" ] 
then
	echo "Backing-up autostart.sh"
	mv $HOME/.config/openbox/autostart.sh $HOME/.config/openbox/autostart.sh.${timestamp}.bak 
else
	echo "Nothing to backup. File autostart.sh does not exist"
fi
echo "Copying autostart.sh under $HOME/.config/openbox"
cp ./autostart $HOME/.config/openbox/autostart.sh
chmod 744 $HOME/.config/openbox/autostart.sh

wait_for_input
if [ -f "$HOME/.config/openbox/rc.xml" ] 
then
	echo "Backing-up rc.xml"
	mv $HOME/.config/openbox/rc.xml $HOME/.config/openbox/rc.xml.${timestamp}.bak 
else
	echo "Nothing to backup. File rc.xml does not exist"
fi
echo "Copying rc.xml under $HOME/.config/openbox"
cp ./rc.xml $HOME/.config/openbox/rc.xml

wait_for_input
if [ -f "$HOME/.config/openbox/menu.xml" ] 
then
	echo "Backing-up menu.xml"
	mv $HOME/.config/openbox/menu.xml $HOME/.config/openbox/menu.xml.${timestamp}.bak 
else
	echo "Nothing to backup. File rc.xml does not exist"
fi
echo "Copying menu.xml under $HOME/.config/openbox"
cp ./menu.xml $HOME/.config/openbox/menu.xml

echo "Copying Openbox Desktop Wallpapers under $HOME/.config/openbox/Wallpapers..."
wait_for_input
# Wallpaper
cp ./grey-gradient.png $HOME/.config/openbox/Wallpapers/grey-gradient.png
cp ./red-gradient.jpg $HOME/.config/openbox/Wallpapers/red-gradient.jpg

echo "Copying Tint2 Configuration Files..."
wait_for_input
# tint2
if [ -f "$HOME/.config/tint2/tint2rc" ] 
then
	echo "Backing-up tint2rc"
	mv $HOME/.config/tint2/tint2rc $HOME/.config/tint2/tint2rc.${timestamp}.bak
else
	echo "Nothing to backup. File tint2rc does not exist"
fi
cp ./tint2rc $HOME/.config/tint2/tint2rc

echo "Copying Conky Configuration Files under $HOME..."
wait_for_input
# conky
if [ -f "$HOME/.conkyrc" ] 
then
	echo "Backing-up .conkyrc"
	mv $HOME/.conkyrc $HOME/.conkyrc.${timestamp}.bak 
else
	echo "Nothing to backup. File .conkyrc does not exist"
fi
cp ./conkyrc $HOME/.conkyrc

echo "Copying gtk2/gtk3 Configuration Files under $HOME..."
wait_for_input
# GTK2 Themes and Icons
if [ -f "$HOME/.gtkrc-2.0" ] 
then
	echo "Backing-up .gtkrc-2.0"
	mv $HOME/.gtkrc-2.0 $HOME/.gtkrc-2.0.${timestamp}.bak 
else
	echo "Nothing to backup. File .gtk2rc does not exist"
fi
cp gtkrc-2.0 $HOME/.gtkrc-2.0
cp ./my-siva-flat-dark-borderless.tar.gz $HOME/.themes/my-siva-flat-dark-borderless.tar.gz
tar xvzf $HOME/.themes/my-siva-flat-dark-borderless.tar.gz -C $HOME/.themes

# GTK3 Themes and Icons
if [ -f "$HOME/.config/gtk-3.0/settings.ini" ] 
then
	echo "Backing-up settings.ini"
	mv $HOME/.config/gtk-3.0/settings.ini $HOME/.config/gtk-3.0/settings.${timestamp}.ini
else 
	echo "Nothing to backup. File settings.ini does not exist"
fi
echo "Copying settings.ini Configuration Files under $HOME/.config/gtk-3.0..."
cp settings.ini $HOME/.config/gtk-3.0/settings.ini

echo "Copying Icon Pack Files under $HOME/.icons..."
wait_for_input
# Icon Pack
cp ./ultra-flat-icons-orange.tar.gz $HOME/.icons/ultra-flat-icons-orange.tar.gz
tar xvzf $HOME/.icons/ultra-flat-icons-orange.tar.gz -C $HOME/.icons/

if [ "${is_user_allowed}" == "true" ]; then
	# Install Update Script
	echo "Copying Update Scripts under $HOME/.local/scripts..."
	git https://github.com/HiMyNameIsIlNano/update_script.git /tmp/update_script_${timestamp}
	sh /tmp/update_script_${timestamp}/install
else
	echo "Skipping Copying Update Scripts under $HOME/.local/scripts as ${whoami} is not memeber of the group installer..."
fi	
		
exit 0
