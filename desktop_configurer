#!/bin/sh

read_property(){
	input="$@"
	temp=`cat $config_file | sed 's/\"//g' | grep -w $input | cut -d ":" -f2`
	echo ${temp##*|}
}

wait_for_input(){
	printf 'press [ENTER] to continue'
	read dummy
}

is_installed(){
	echo "Checking if $1 is installed..."
	if ! [ -x "$(command -v $1)" ]; then
	  echo 'Error: $1 is not installed.' >&2
	  exit 1
	fi
}

check_requiremnts(){
	echo "Checking general Requirements..."
	# Check if git is installed
	is_installed git
}

check_docker_requirements(){
	echo "Checking docker Requirements..."
	# Check if docker, virtualbox, vagrant are installed
	is_installed virtualbox-ose
	is_installed vagrant
	is_installed docker-machine
}

work_dir=.
config_file=${work_dir}/post_install.config

# Check General Requirements
check_requiremnts

# Variable Declaration
is_docker_enabled=$(read_property enable_docker)
is_setup_vpn_enabled=$(read_property setup_vpn)
timestamp=$(date +%s)

mkdir -p $HOME/.local/scripts
mkdir -p $HOME/.config/openbox/Wallpapers
mkdir -p $HOME/.config/gtk-3.0
mkdir -p $HOME/.themes
mkdir -p $HOME/.icons
mkdir -p $HOME/.config/tint2

echo "Start configuring Openbox Desktop Look & Feel..."
wait_for_input
# .xinitrc
if [ -f "$HOME/.xinitrc" ] 
then
	echo "Backing-up .xinitrc"
	mv $HOME/.xinitrc $HOME/.xinitrc.${timestamp}.bak 
else
	echo "Nothing to backup. File .xinitrc does not exist"
fi
echo 'exec openbox-session' >> $HOME/.xinitrc

wait_for_input
# tcshrc
if [ -f "$HOME/.tcshrc" ] 
then
	echo "Backing-up .tcshrc"
	mv $HOME/.tcshrc $HOME/.tcshrc.${timestamp}.bak 
else
	echo "Nothing to backup. File .tcshrc does not exist"
fi
cp ./tcshrc $HOME/.tcshrc

wait_for_input
# Xdefaults
if [ -f "$HOME/.Xdefaults" ] 
then
	echo "Backing-up .Xdefaults"
	mv $HOME/.Xdefaults $HOME/.Xdefaults.${timestamp}.bak 
else
	echo "Nothing to backup. File .Xdefaults does not exist"
fi
cp ./Xdefaults $HOME/.Xdefaults

wait_for_input
# Openbox
if [ -f "$HOME/.config/openbox/autostart.sh" ] 
then
	echo "Backing-up autostart.sh"
	mv $HOME/.config/openbox/autostart.sh $HOME/.config/openbox/autostart.sh.${timestamp}.bak 
else
	echo "Nothing to backup. File autostart.sh does not exist"
fi
cp ./autostart $HOME/.config/openbox/autostart.sh
chmod 744 $HOME/.config/openbox/autostart.sh

wait_for_input
if [ -f "$HOME/.config/openbox/rc.xml" ] 
then
	echo "Backing-up rc.xml"
	mv $HOME/.config/openbox/rc.xml $HOME/.config/openbox/rc.xml.${timestamp}.bak 
else
	echo "Nothing to backup. File rc.xml does not exist"
fi
cp ./rc.xml $HOME/.config/openbox/rc.xml

wait_for_input
if [ -f "$HOME/.config/openbox/menu.xml" ] 
then
	echo "Backing-up menu.xml"
	mv $HOME/.config/openbox/menu.xml $HOME/.config/openbox/menu.xml.${timestamp}.bak 
else
	echo "Nothing to backup. File rc.xml does not exist"
fi
cp ./menu.xml $HOME/.config/openbox/menu.xml

echo "Copying Openbox Desktop Wallpapers..."
wait_for_input
# Wallpaper
cp ./grey-gradient.png $HOME/.config/openbox/Wallpapers/grey-gradient.png
cp ./red-gradient.jpg $HOME/.config/openbox/Wallpapers/red-gradient.jpg

echo "Copying Tint2 Configuration Files..."
wait_for_input
# tint2
if [ -f "$HOME/.config/tint2/tint2rc" ] 
then
	echo "Backing-up tint2rc"
	mv $HOME/.config/tint2/tint2rc $HOME/.config/tint2/tint2rc.${timestamp}.bak
else
	echo "Nothing to backup. File tint2rc does not exist"
fi
cp ./tint2rc $HOME/.config/tint2/tint2rc

echo "Copying Conky Configuration Files..."
wait_for_input
# conky
if [ -f "$HOME/.conkyrc" ] 
then
	echo "Backing-up .conkyrc"
	mv $HOME/.conkyrc $HOME/.conkyrc.${timestamp}.bak 
else
	echo "Nothing to backup. File .conkyrc does not exist"
fi
cp ./conkyrc $HOME/.conkyrc

echo "Copying gtk2/gtk3 Configuration Files..."
wait_for_input
# GTK2 Themes and Icons
if [ -f "$HOME/.gtkrc-2.0" ] 
then
	echo "Backing-up .gtkrc-2.0"
	mv $HOME/.gtkrc-2.0 $HOME/.gtkrc-2.0.${timestamp}.bak 
else
	echo "Nothing to backup. File .gtk2rc does not exist"
fi
cp gtkrc-2.0 $HOME/.gtkrc-2.0
cp ./my-siva-flat-dark-borderless.tar.gz $HOME/.themes/my-siva-flat-dark-borderless.tar.gz
tar xvzf $HOME/.themes/my-siva-flat-dark-borderless.tar.gz -C $HOME/.themes

# GTK3 Themes and Icons
if [ -f "$HOME/.config/gtk-3.0/settings.ini" ] 
then
	echo "Backing-up settings.ini"
	mv $HOME/.config/gtk-3.0/settings.ini $HOME/.config/gtk-3.0/settings.${timestamp}.ini
else 
	echo "Nothing to backup. File settings.ini does not exist"
fi
cp settings.ini $HOME/.config/gtk-3.0/settings.ini

echo "Copying Icon Pack Files..."
wait_for_input
# Icon Pack
cp ./ultra-flat-icons-orange.tar.gz $HOME/.icons/ultra-flat-icons-orange.tar.gz
tar xvzf $HOME/.icons/ultra-flat-icons-orange.tar.gz -C $HOME/.icons/

if [ "${is_docker_enabled}" == "true" ]
then
	check_docker_requirements
		
	echo "Installing docker configuration..."
	wait_for_input
	mkdir -p $HOME/Development/Vagrant/dockervm
	cp Vagrantfile $HOME/Development/Vagrant/dockervm/Vagrantfile
	
	echo "Installing docker shortcuts..."
	wait_for_input
	mkdir -p $HOME/.local/scripts
	cp ./docker_up $HOME/.local/scripts/docker_up
	cp ./docker_down $HOME/.local/scripts/docker_down
fi

if [ "${is_setup_vpn_enabled}" == "true" ]
then
	echo "Installing openvpn scripts..."
	wait_for_input
		
	git https://github.com/HiMyNameIsIlNano/vpnbook.git /tmp/vpnbook
	# Add Installer
fi

exit 0
